info:
  component: Admisiones Microservice

logging:
  level:
    root: WARN
    co.agileventure: INFO
    
#==============================
#  JMS/ ACTIVEMQ 
#==============================
mensajes:
    queue:
        eventosnf: eventosnf
        eventosfacultad : eventosfacultad
        eventosrequisito: eventosrequisito
        eventostipoconvenio: eventostipoconvenio
        eventosestudianteliq: eventosestudianteliq
        eventosestudianteadmitido: eventosestudianteadmitido
        eventoscalendarioacademico: eventoscalendarioacademico
        eventosasignatura: eventosasignatura
        eventoscalendarioacademicoact: eventoscalendarioacademicoact
        eventosprograma: eventosprograma
        eventosliquidacionestudiante: eventosliquidacionestudiante
        eventosconfiguracionprograma: eventosconfiguracionprograma
        eventosestudianteadmitidomasivo: eventosestudianteadmitidomasivo
        eventosestudianteliqmasivo: eventosestudianteliqmasivo
        eventosaspirantescrm: eventosaspirantescrm
        
        
jms:
    cache:
        size: 10
    clientid:
        topic: admisionNFclienttopic
        queue: admisionNFclientqueue
        
#====================================================================        
#          MONGO DB
#=====================================================================
#conexi√≥n a mongodb desde localhost
#spring:
#     data:
#        mongodb:
#            uri: mongodb://admin:admin@localhost:27017/yinnrepositrory

# Allows Hibernate to generate SQL optimized for a particular DBMS 
#        properties:
#            hibernate:
#                dialect: org.hibernate.dialect.mongodb.MongoDBDialect
            
            
#==========================================================================

spring:
    datasource:
        url: jdbc:sqlserver://192.168.1.20\ZABUD:1433;database=admision;user=sa;password=root;integratedSecurity=false;
        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
#        url: jdbc:mysql://localhost/admision
#        driver-class-name:  com.mysql.jdbc.Driver

# Username and password
#        username: root
#        password: root

# Keep the connection alive if idle for a long time (needed in production)
#        testWhileIdle: true
#        validationQuery: SELECT 1



# ==========================================================================
# = JPA / HIBERNATE
# ==========================================================================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
    jpa:
        show-sql: true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
        hibernate:
            ddl-auto: update   
            
# Naming strategy
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS for MySQL:MySQL5Dialect - SQLserver:SQLServerDialect
        properties:
            hibernate:
                dialect: org.hibernate.dialect.SQLServerDialect
